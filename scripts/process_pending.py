import argparse
from database import Database
import config

def process_pending_questions(csv_output=None):
    db = Database(config.DB_HOST, config.DB_USER, config.DB_PASSWORD, config.DB_NAME)
    
    if not db.connect():
        return False
        
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    cursor = db.execute_query("SELECT * FROM pending_questions")
    pending_questions = cursor.fetchall() if cursor else []
    
    if not pending_questions:
        print("ü§∑ –ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        return True
    
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω CSV —Ñ–∞–π–ª - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ CSV
    if csv_output:
        import csv
        with open(csv_output, 'w', encoding='utf-8') as f:
            writer = csv.writer(f)
            writer.writerow(['Original Question', 'Normalized Question', 'Created At'])
            for pq in pending_questions:
                writer.writerow([pq[1], pq[2], pq[4]])
        print(f"üìù –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(pending_questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ {csv_output}")
    
    # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    db.execute_query("TRUNCATE TABLE pending_questions")
    print(f"üßπ –û—á–∏—â–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ pending_questions")
    return True

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤')
    parser.add_argument('--csv', type=str, 
                        help='–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≤ CSV —Ñ–∞–π–ª')
    args = parser.parse_args()
    
    if process_pending_questions(args.csv):
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–æ–≤")