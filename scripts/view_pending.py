import logging
from database import Database
import config
from utils import blob_to_array
import numpy as np

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def view_pending_questions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    db = Database(config.DB_HOST, config.DB_USER, config.DB_PASSWORD, config.DB_NAME)
    
    if not db.connect():
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return

    try:
        cursor = db.connection.cursor(dictionary=True)
        cursor.execute("SELECT * FROM pending_questions ORDER BY created_at DESC")
        questions = cursor.fetchall()
        
        if not questions:
            logger.info("‚ÑπÔ∏è –ù–µ—Ç –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
            return
            
        logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(questions)} –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:")
        print("\n" + "=" * 80)
        
        for i, question in enumerate(questions, 1):
            print(f"{i}. [ID: {question['id']}] [{question['created_at']}]")
            print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: {question['original_question']}")
            print(f"   –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: {question['normalized_question']}")
            print("-" * 80)
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    finally:
        cursor.close()
        db.disconnect()

if __name__ == '__main__':
    view_pending_questions()